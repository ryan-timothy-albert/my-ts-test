/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type DeletePetRequest = {
    apiKey?: string | undefined;
    /**
     * Pet id to delete
     */
    petId: number;
};

/** @internal */
export namespace DeletePetRequest$ {
    export const inboundSchema: z.ZodType<DeletePetRequest, z.ZodTypeDef, unknown> = z
        .object({
            api_key: z.string().optional(),
            petId: z.number().int(),
        })
        .transform((v) => {
            return remap$(v, {
                api_key: "apiKey",
            });
        });

    export type Outbound = {
        api_key?: string | undefined;
        petId: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeletePetRequest> = z
        .object({
            apiKey: z.string().optional(),
            petId: z.number().int(),
        })
        .transform((v) => {
            return remap$(v, {
                apiKey: "api_key",
            });
        });
}
